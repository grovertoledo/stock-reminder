{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","CreateTodoButton/index.js","TodoList/index.js","TodoItem/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","CreateTodoButton","onClick","prevState","TodoList","TodoItem","onComplete","onDelete","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.75afda2b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {useLocalStorage} from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n    } = useLocalStorage(\"TODOS_V1\", []);\r\n    \r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n\r\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    let searchedTodos = [];\r\n    \r\n    if (!searchValue.length >= 1) {\r\n    searchedTodos = todos;\r\n    } else {\r\n    searchedTodos = todos.filter(todo => {\r\n        const todoText = todo.text.toLowerCase();\r\n        const searchText = searchValue.toLowerCase();\r\n        return todoText.includes(searchText);\r\n    })\r\n    }\r\n    \r\n    \r\n    const completeTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n\r\n    const newTodos = [...todos];\r\n    newTodos[todoIndex].completed = true;\r\n    // todos[todoIndex] = {\r\n    //   text: todos[todoIndex].text,\r\n    //   completed: true,\r\n    // };\r\n\r\n    saveTodos(newTodos);\r\n    };\r\n    \r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n    };\r\n    \r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n            completed: false,\r\n            text,\r\n        });\r\n        saveTodos(newTodos);\r\n    };\r\n    \r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            deleteTodo,\r\n            addTodo,\r\n            openModal,\r\n            setOpenModal,\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n};\r\n\r\nexport { TodoContext, TodoProvider };","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) { \r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue);\r\n  \r\n    React.useEffect(() => {\r\n      setTimeout(() => {\r\n        try {\r\n          const localStorageItem = localStorage.getItem(itemName);\r\n          let parsedItem;\r\n          \r\n          if(!localStorageItem) {\r\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n          } else {\r\n            parsedItem = JSON.parse(localStorageItem);\r\n          }\r\n  \r\n          setItem(parsedItem);\r\n          setLoading(false);\r\n        } catch(error) {\r\n          setError(error);\r\n        }\r\n        \r\n      }, 1000)\r\n    });\r\n    \r\n    \r\n    \r\n    const saveItem = (newItem) => {\r\n      try {\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedItem);\r\n        setItem(newItem);\r\n      } catch(error) {\r\n        setError(error);\r\n      }\r\n    };\r\n  \r\n    return {\r\n      item,\r\n      saveItem,\r\n      loading,\r\n      error,\r\n    };\r\n  };\r\n\r\n  export { useLocalStorage };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport \"./TodoCounter.css\";\r\n\r\n// const estilos = {\r\n//     color: \"red\",\r\n//     backgroundColor: \"yellow\",\r\n// };\r\n\r\nfunction TodoCounter(/* props */ /* { total, completed} */) {\r\n    const { totalTodos, completedTodos} = React.useContext(TodoContext);\r\n    return (\r\n        <h2 /* style={estilos} */ className=\"TodoCounter\">Te falta comprar {completedTodos} de {totalTodos } items</h2>\r\n    );\r\n};\r\n\r\nexport { TodoCounter };\r\n","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport \"./TodoSearch.css\";\r\n\r\nfunction TodoSearch(/* { searchValue, setSearchValue } */) {\r\n  const {searchValue, setSearchValue} = React.useContext(TodoContext);\r\n    \r\n  const onSearchValueChange = (event) => {\r\n    console.log(event.target.value);\r\n    setSearchValue(event.target.value)\r\n  };\r\n\r\n  return /* [ */ (\r\n    <input \r\n      className=\"TodoSearch\" \r\n      placeholder=\"e.g. Arroz, Manzana\"\r\n      value={searchValue} \r\n      onChange={onSearchValueChange}\r\n    />\r\n    // <p>{searchValue}</p>\r\n  /* ] */ \r\n  );\r\n};\r\n\r\nexport { TodoSearch };\r\n","import React from \"react\";\r\nimport \"./CreateTodoButton.css\";\r\n\r\nfunction CreateTodoButton(props) {\r\n    const onClickButton = () => {\r\n        props.setOpenModal(prevState => !prevState);\r\n    }\r\n    \r\n    return (\r\n        <button \r\n            className=\"CreateTodoButton\"\r\n            onClick={onClickButton}\r\n        >\r\n        +\r\n        </button>\r\n    );\r\n};\r\n\r\nexport { CreateTodoButton };","import React from \"react\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport { TodoList };","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nfunction TodoItem(props) {\r\n    // const onComplete = () => {\r\n    //     alert(`Todo ${props.text} completado`)\r\n    // }\r\n    // const onDelete = () => {\r\n    //     alert(`Todo ${props.text} eliminado`)\r\n    // }\r\n    \r\n    return (\r\n        <li className=\"TodoItem\">\r\n            <span className={`Icon Icon-check ${props.completed && `Icon-check--active`}`}\r\n            onClick={props.onComplete}\r\n            >✓</span>\r\n            <p className={`TodoItem-p ${props.completed && `TodoItem-p--complete`}`}>{props.text}</p>\r\n            <span className=\"Icon Icon-delete\"\r\n            onClick={props.onDelete}\r\n            >X</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport { TodoItem };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({children}) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById(\"modal\")\r\n    );\r\n}\r\n\r\nexport { Modal };","import React from \"react\";\r\nimport {TodoContext} from \"../TodoContext\";\r\nimport \"./TodoForm.css\";\r\n\r\nfunction TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n    \r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue (event.target.value);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n    \r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label></label>\r\n            <textarea\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n                placeholder=\"e.g. 1 kg de manzanas\"\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button className=\"TodoForm-button TodoForm-button--cancel\" type=\"button\" onClick={onCancel}>\r\n                    Cancelar\r\n                </button>\r\n                <button className=\"TodoForm-button TodoForm-button--add\" type=\"submit\">\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport {TodoForm};\r\n","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport { TodoCounter } from \"../TodoCounter\";\r\nimport { TodoSearch } from \"../TodoSearch\";\r\nimport { CreateTodoButton } from \"../CreateTodoButton\";\r\nimport { TodoList } from \"../TodoList\";\r\nimport { TodoItem } from \"../TodoItem\";\r\nimport { Modal } from \"../Modal\";\r\nimport { TodoForm } from \"../TodoForm\";\r\n\r\nfunction AppUI() {\r\n    const {\r\n        error,\r\n        loading,\r\n        searchedTodos,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n            <TodoList>\r\n                {error && <p>Hubo un error.</p>}\r\n                {loading && <p>Estamos cargando.</p>}\r\n                {(!loading && !searchedTodos.length) && <p>Agrega tu primer item por comprar.</p>}\r\n                {/* todos */ searchedTodos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.text} \r\n                    text={todo.text} \r\n                    completed={todo.completed}\r\n                    onComplete={() => completeTodo(todo.text)}\r\n                    onDelete={() => deleteTodo(todo.text)}\r\n                    />\r\n                ))}\r\n            </TodoList>\r\n            {!!openModal && (\r\n                <Modal>\r\n                    <TodoForm />\r\n                </Modal>\r\n            )}\r\n            <CreateTodoButton \r\n                setOpenModal={setOpenModal}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport {AppUI};\r\n","import React from \"react\";\r\nimport { TodoProvider } from \"../TodoContext\";\r\nimport { AppUI } from \"./AppUI\";\r\n  \r\nfunction App() {\r\n  \r\n  return (\r\n    <TodoProvider>\r\n      <AppUI />\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/index';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}