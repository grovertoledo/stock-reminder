{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","CreateTodoButton/index.js","TodoList/index.js","TodoItem/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","CreateTodoButton","onClick","prevState","TodoList","TodoItem","onComplete","onDelete","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.cedb32da.chunk.js","sourcesContent":["import React from \"react\";\nimport {useLocalStorage} from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error,\n    } = useLocalStorage(\"TODOS_V1\", []);\n    \n    const [searchValue, setSearchValue] = React.useState(\"\");\n\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n    \n    if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n    } else {\n    searchedTodos = todos.filter(todo => {\n        const todoText = todo.text.toLowerCase();\n        const searchText = searchValue.toLowerCase();\n        return todoText.includes(searchText);\n    })\n    }\n    \n    \n    const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    // todos[todoIndex] = {\n    //   text: todos[todoIndex].text,\n    //   completed: true,\n    // };\n\n    saveTodos(newTodos);\n    };\n    \n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    };\n    \n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        });\n        saveTodos(newTodos);\n    };\n    \n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            addTodo,\n            openModal,\n            setOpenModal,\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n};\n\nexport { TodoContext, TodoProvider };","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) { \n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n  \n    React.useEffect(() => {\n      setTimeout(() => {\n        try {\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n          \n          if(!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n          } else {\n            parsedItem = JSON.parse(localStorageItem);\n          }\n  \n          setItem(parsedItem);\n          setLoading(false);\n        } catch(error) {\n          setError(error);\n        }\n        \n      }, 1000)\n    });\n    \n    \n    \n    const saveItem = (newItem) => {\n      try {\n        const stringifiedItem = JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n      } catch(error) {\n        setError(error);\n      }\n    };\n  \n    return {\n      item,\n      saveItem,\n      loading,\n      error,\n    };\n  };\n\n  export { useLocalStorage };","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoCounter.css\";\n\n// const estilos = {\n//     color: \"red\",\n//     backgroundColor: \"yellow\",\n// };\n\nfunction TodoCounter(/* props */ /* { total, completed} */) {\n    const { totalTodos, completedTodos} = React.useContext(TodoContext);\n    return (\n        <h2 /* style={estilos} */ className=\"TodoCounter\">Haz completado {completedTodos} de {totalTodos } TODOs</h2>\n    );\n};\n\nexport { TodoCounter };","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch(/* { searchValue, setSearchValue } */) {\n  const {searchValue, setSearchValue} = React.useContext(TodoContext);\n    \n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value)\n  };\n\n  return /* [ */ (\n    <input \n      className=\"TodoSearch\" \n      placeholder=\"Cebollita\"\n      value={searchValue} \n      onChange={onSearchValueChange}\n    />\n    // <p>{searchValue}</p>\n  /* ] */ \n  );\n};\n\nexport { TodoSearch };","import React from \"react\";\nimport \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton(props) {\n    const onClickButton = () => {\n        props.setOpenModal(prevState => !prevState);\n    }\n    \n    return (\n        <button \n            className=\"CreateTodoButton\"\n            onClick={onClickButton}\n        >\n        +\n        </button>\n    );\n};\n\nexport { CreateTodoButton };","import React from \"react\";\nimport \"./TodoList.css\";\n\nfunction TodoList(props) {\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n};\n\nexport { TodoList };","import React from \"react\";\nimport \"./TodoItem.css\";\n\nfunction TodoItem(props) {\n    // const onComplete = () => {\n    //     alert(`Todo ${props.text} completado`)\n    // }\n    // const onDelete = () => {\n    //     alert(`Todo ${props.text} eliminado`)\n    // }\n    \n    return (\n        <li className=\"TodoItem\">\n            <span className={`Icon Icon-check ${props.completed && `Icon-check--active`}`}\n            onClick={props.onComplete}\n            >✓</span>\n            <p className={`TodoItem-p ${props.completed && `TodoItem-p--complete`}`}>{props.text}</p>\n            <span className=\"Icon Icon-delete\"\n            onClick={props.onDelete}\n            >X</span>\n        </li>\n    );\n};\n\nexport { TodoItem };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./Modal.css\";\n\nfunction Modal({children}) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById(\"modal\")\n    );\n}\n\nexport { Modal };","import React from \"react\";\nimport {TodoContext} from \"../TodoContext\";\nimport \"./TodoForm.css\";\n\nfunction TodoForm() {\n    const [newTodoValue, setNewTodoValue] = React.useState(\"\");\n    \n    const {\n        addTodo,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    const onChange = (event) => {\n        setNewTodoValue (event.target.value);\n    };\n\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n    \n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    };\n    \n    return (\n        <form onSubmit={onSubmit}>\n            <label></label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Comer almuerzo\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button className=\"TodoForm-button TodoForm-button--cancel\" type=\"button\" onClick={onCancel}>\n                    Cancelar\n                </button>\n                <button className=\"TodoForm-button TodoForm-button--add\" type=\"submit\">\n                    Añadir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport {TodoForm};","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { Modal } from \"../Modal\";\nimport { TodoForm } from \"../TodoForm\";\n\nfunction AppUI() {\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n    \n    return (\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch />\n            <TodoList>\n                {error && <p>Hubo un error.</p>}\n                {loading && <p>Estamos cargando.</p>}\n                {(!loading && !searchedTodos.length) && <p>Crea tu primer Todo.</p>}\n                {/* todos */ searchedTodos.map(todo => (\n                <TodoItem \n                    key={todo.text} \n                    text={todo.text} \n                    completed={todo.completed}\n                    onComplete={() => completeTodo(todo.text)}\n                    onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n            {!!openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n            <CreateTodoButton \n                setOpenModal={setOpenModal}\n            />\n        </React.Fragment>\n    );\n};\n\nexport {AppUI};","import React from \"react\";\nimport { TodoProvider } from \"../TodoContext\";\nimport { AppUI } from \"./AppUI\";\n  \nfunction App() {\n  \n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}